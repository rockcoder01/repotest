<%-include('./partials/head'); %>
  <body>
    <%-include('./partials/navbar'); %>

      <div class="container">
          <h1 class="text-center">Delete Specific or All Pages inside PDF Document Online</h1>
    <form id="form">
        <div class="form-group container">
          <input
            type="file"
            accept=".pdf"
            required
            id="files"
            class="form-control"
          />
        </div>
        <div id="result" hidden class="form-group container"></div>
        <h1 class="text-primary container" id="info"></h1>
        <div class="form-group container">
          <button class="btn btn-block btn-danger">Download PDF</button>
        </div>
      </form>
        <br><br>
        <%-include('./partials/services');%>
        <%-include('./partials/jumbotron');%>
      </div>
</body>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.12.313/pdf.min.js"></script>
  <script src="https://unpkg.com/pdf-lib@1.3.0"></script>
  <script src="https://unpkg.com/downloadjs@1.4.7"></script>
  <script>
    const { PDFDocument } = PDFLib;

    let form = document.getElementById("form");

    form.addEventListener("submit", (e) => {
      e.preventDefault();

      for (var option of document.getElementById("pages").options) {
        if (option.selected) {
          selectedPages.push(option.value);
        }
      }

      console.log(selectedPages);

      removepages(typedarray, numberOfPages, selectedPages);

      inputElement.value = "";
      document.getElementById("pages").innerHTML = "";
      document.getElementById("result").style.display = "none";
      document.getElementById("info").innerHTML = "";
      location.reload()
    });

    let selectedPages = [];

    let numberOfPages;

    let inputElement = document.getElementById("files");

    let pageSelectElement = document.getElementById("pages");

    let typedarray;

    inputElement.onchange = function (event) {
      var file = event.target.files[0];

      //Step 2: Read the file using file reader
      var fileReader = new FileReader();

      fileReader.onload = function () {
        //Step 4:turn array buffer into typed array
        typedarray = new Uint8Array(this.result);

        //Step 5:pdfjs should be able to read this
        const loadingTask = pdfjsLib.getDocument(typedarray);

        loadingTask.promise.then(async (pdf) => {
          document.getElementById("info").innerHTML =
            "The number of Pages inside pdf document is " + pdf.numPages;
          // The document is loaded here...

          let result = document.getElementById("result");

          numberOfPages = pdf.numPages;

          let pages = [];

          for (let i = 0; i < pdf.numPages; i++) {
            pages.push(i);
          }

          console.log(pages);

          let html = `
          <label for="select pages">Select Pages of PDF You want to Delete:</label>
        <select id="pages" class="form-control" name="sites-list" size="${
          pdf.numPages
        }" multiple>
            
        ${appendOption(pages)}
            
            </select>`;

          result.innerHTML = html;

          console.log(html);

          result.style.display = "block";
        });
      };
      //Step 3:Read the file as ArrayBuffer
      fileReader.readAsArrayBuffer(file);
    };

    function appendOption(pages) {
      let html = "";
      pages.forEach((page) => {
        html += `
            
             <option value="${page + 1}">${page + 1}</option>
            
            `;
      });

      return html;
    }

    async function removepages(typedarray, pages, selectedPages) {
      const pdfDoc = await PDFDocument.load(typedarray);
      // Get the first page of the document
      console.log(selectedPages);
      console.log(pages);

      selectedPages.forEach((page, index) => {
        console.log(page - 1);
        pdfDoc.removePage(page - 1 - index);
      });

      const pdfBytes = await pdfDoc.save();

      // Trigger the browser to download the PDF document
      download(pdfBytes, "pdf-lib_modification_example.pdf", "application/pdf");
    }

    window.onmousedown = function (e) {
      var el = e.target;
      if (
        el.tagName.toLowerCase() == "option" &&
        el.parentNode.hasAttribute("multiple")
      ) {
        e.preventDefault();

        // toggle selection
        if (el.hasAttribute("selected")) el.removeAttribute("selected");
        else el.setAttribute("selected", "");

        // hack to correct buggy behavior
        var select = el.parentNode.cloneNode(true);
        el.parentNode.parentNode.replaceChild(select, el.parentNode);
      }
    };
  </script>
</html>